Anticommutators:
{ 1*c_dag(1,0) , 1*c(1,0) } = 1
{ 1*c_dag(1,0) , 1*c(2,0) } = 0
{ 1*c_dag(1,0) , 1*c(3,0) } = 0
{ 1*c_dag(2,0) , 1*c(1,0) } = 0
{ 1*c_dag(2,0) , 1*c(2,0) } = 1
{ 1*c_dag(2,0) , 1*c(3,0) } = 0
{ 1*c_dag(3,0) , 1*c(1,0) } = 0
{ 1*c_dag(3,0) , 1*c(2,0) } = 0
{ 1*c_dag(3,0) , 1*c(3,0) } = 1
Commutators:
[ 1*c_dag(1,0) , 1*c(1,0) ] = -1 + 2*c_dag(1,0)*c(1,0)
[ 1*c_dag(1,0) , 1*c(2,0) ] = 2*c_dag(1,0)*c(2,0)
[ 1*c_dag(1,0) , 1*c(3,0) ] = 2*c_dag(1,0)*c(3,0)
[ 1*c_dag(2,0) , 1*c(1,0) ] = 2*c_dag(2,0)*c(1,0)
[ 1*c_dag(2,0) , 1*c(2,0) ] = -1 + 2*c_dag(2,0)*c(2,0)
[ 1*c_dag(2,0) , 1*c(3,0) ] = 2*c_dag(2,0)*c(3,0)
[ 1*c_dag(3,0) , 1*c(1,0) ] = 2*c_dag(3,0)*c(1,0)
[ 1*c_dag(3,0) , 1*c(2,0) ] = 2*c_dag(3,0)*c(2,0)
[ 1*c_dag(3,0) , 1*c(3,0) ] = -1 + 2*c_dag(3,0)*c(3,0)

Algebra:
x = 1*c(0,0)
y = 1*c_dag(1,0)
-x = -1*c(0,0)
x + 2.0 = 2 + 1*c(0,0)
2.0 + x = 2 + 1*c(0,0)
x - 2.0 = -2 + 1*c(0,0)
2.0 - x = 2 + -1*c(0,0)
3.0*y = 3*c_dag(1,0)
y*3.0 = 3*c_dag(1,0)
x + y = 1*c_dag(1,0) + 1*c(0,0)
x - y = -1*c_dag(1,0) + 1*c(0,0)
(x + y)*(x - y) = 2*c_dag(1,0)*c(0,0)
Operator(3.14) = 3.14

N^3:
N = 1*c_dag(0,'dn')*c(0,'dn') + 1*c_dag(0,'up')*c(0,'up')
N^3 = 1*c_dag(0,'dn')*c(0,'dn') + 1*c_dag(0,'up')*c(0,'up') + 6*c_dag(0,'dn')*c_dag(0,'up')*c(0,'up')*c(0,'dn')
Monomials of N^3:
[(True, [0, 'dn']), (False, [0, 'dn'])] 1.0
[(True, [0, 'up']), (False, [0, 'up'])] 1.0
[(True, [0, 'dn']), (True, [0, 'up']), (False, [0, 'up']), (False, [0, 'dn'])] 6.0

X = (-1-2j)*c_dag('a',1)*c_dag('a',2)*c('a',4)*c('a',3)
dagger(X) = (-1+2j)*c_dag('a',3)*c_dag('a',4)*c('a',2)*c('a',1)
X.real = -1*c_dag('a',1)*c_dag('a',2)*c('a',4)*c('a',3)
X.imag = -2*c_dag('a',1)*c_dag('a',2)*c('a',4)*c('a',3)
