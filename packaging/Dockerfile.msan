FROM ubuntu:focal
ARG LLVM=10

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      clang-${LLVM} \
      cmake \
      g++ \
      gfortran \
      git \
      vim \
      lldb-${LLVM} \
      hdf5-tools \
      libblas-dev \
      libboost-all-dev \
      libclang-${LLVM}-dev \
      libfftw3-dev \
      libgfortran4 \
      libgmp-dev \
      libopenmpi-dev \
      openmpi-bin \
      openmpi-common \
      openmpi-doc \
      intel-mkl \
      python3-clang-${LLVM} \
      python3-dev \
      python3-mako \
      python3-matplotlib \
      python3-mpi4py \
      python3-numpy \
      python3-pip \
      python3-scipy

ENV PYTHON_VERSION=3.8 \
    CC=clang-${LLVM} CXX=clang++-${LLVM} LLVM_VERSION=${LLVM}.0.0
RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM} 60 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM} --slave /usr/bin/clang-cpp clang-cpp /usr/bin/clang-cpp-${LLVM}

# Build libcxx with MSAN
ADD https://github.com/llvm/llvm-project/releases/download/llvmorg-${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz /tmp/
ADD https://github.com/llvm/llvm-project/releases/download/llvmorg-${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz /tmp/
RUN mkdir /tmp/build && cd /tmp/build && \
      tar -C /tmp -xf /tmp/libcxx-${LLVM_VERSION}.src.tar.xz && \
      tar -C /tmp -xf /tmp/libcxxabi-${LLVM_VERSION}.src.tar.xz && \
      cmake /tmp/libcxxabi-${LLVM_VERSION}.src -DLLVM_CONFIG_PATH=/usr/bin/llvm-config-${LLVM} -DCMAKE_INSTALL_PREFIX=/usr/lib/llvm-${LLVM} -DLIBCXXABI_LIBCXX_PATH=/tmp/libcxx-${LLVM_VERSION}.src -DLLVM_USE_SANITIZER=MemoryWithOrigins && make -j20 && make install && \
      rm -rf * && \
      cmake /tmp/libcxx-${LLVM_VERSION}.src -DLLVM_CONFIG_PATH=/usr/bin/llvm-config-${LLVM} -DCMAKE_INSTALL_PREFIX=/usr/lib/llvm-${LLVM} -DLIBCXX_CXX_ABI=libcxxabi -DLIBCXX_CXX_ABI_INCLUDE_PATHS=/tmp/libcxxabi-${LLVM_VERSION}.src/include -DLLVM_USE_SANITIZER=MemoryWithOrigins && make -j2 install && \
      rm -rf /tmp/libcxx* /tmp/build

# Build Environment using MSAN
ENV CXXFLAGS="-stdlib=libc++ -fsanitize=memory -fno-omit-frame-pointer -fsanitize-recover=all -fsanitize-memory-track-origins -ggdb3" \
    CFLAGS="-fsanitize=memory -fno-omit-frame-pointer -fsanitize-recover=all -fsanitize-memory-track-origins -ggdb3" \
    LD_LIBRARY_PATH=/usr/lib/llvm-${LLVM}/lib \
    LDFLAGS="-fsanitize=memory" \
    MSAN_SYMBOLIZER_PATH=/usr/lib/llvm-${LLVM}/bin/llvm-symbolizer

# Use mkl over liblapack / libblas
RUN update-alternatives --set liblapack.so-x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/libmkl_rt.so && \
    update-alternatives --set libblas.so-x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/libmkl_rt.so

# HDF5
ADD https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.0/src/CMake-hdf5-1.12.0.tar.gz /tmp/
RUN mkdir /tmp/build && cd /tmp/build && \
      tar -C /tmp -xf /tmp/CMake-hdf5-1.12.0.tar.gz && \
      cmake /tmp/CMake-hdf5-1.12.0/hdf5-1.12.0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr && make -j20 && make install && \
      rm -rf * && \
      rm -rf /tmp/CMake-hdf5-1.12.0* /tmp/build

## OpenMPI
#ADD https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.4.tar.gz /tmp/
#RUN tar -C /tmp -xf /tmp/openmpi-4.0.4.tar.gz && cd /tmp/openmpi-4.0.4 && \
#      ./configure --prefix=/usr --enable-shared --disable-mpi-fortran && make -j20 && make install && \
#      cd /tmp && rm -rf /tmp/openmpi-4.0.4*
